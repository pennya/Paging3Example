apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.duzi.paging3example"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    coreVersion = '1.3.0'
    lifecycleVersion = '2.2.0'
    roomVersion = '2.3.0-alpha01'
    pagingVersion = '3.0.0-alpha01'
    retrofitVersion = '2.7.2'
    okhttpLoggingInterceptorVersion = '4.0.0'
    coroutines = '1.3.6'
    daggerVersion = '2.28'
    daggerHiltAndroidVersion = '2.28-alpha'
    daggerHiltVersion = '1.0.0-alpha01'
    ktx = '1.2.5'
    recyclerViewVersion = '1.2.0-alpha03'
    constraintLayoutVersion = '1.1.3'
    materialVersion = '1.1.0'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // architecture components
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.paging:paging-runtime:$pagingVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.fragment:fragment-ktx:$ktx"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"

    // dagger2
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion" // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Dagger hilt
    implementation "com.google.dagger:hilt-android:$daggerHiltAndroidVersion"
    kapt "com.google.dagger:hilt-android-compiler:$daggerHiltAndroidVersion"
    implementation "androidx.hilt:hilt-common:$daggerHiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$daggerHiltVersion"
    kapt "androidx.hilt:hilt-compiler:$daggerHiltVersion"

    // coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines"
}